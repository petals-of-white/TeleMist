<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    x:Class="TeleMist_v._2._0.ResourceTest">

    <System:Int32 x:Key="ButtonHeight">30</System:Int32>
    <Style TargetType="Window">
        <Setter Property="Background" Value="#F5f5f5"/>
    </Style>
    <Style x:Key="StyleButton" TargetType="Button">
        <Setter Property="Background" Value="#6C55E4"/>
        <Setter Property="Foreground" Value="#f5f5f5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                        <ContentPresenter 
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                             />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
           
            <!--<EventTrigger RoutedEvent="MouseLeftButton"></EventTrigger>-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="3">
                                <ContentPresenter 
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                             />
                                <!-- Content="{TemplateBinding Content}"-->
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <!--<Setter Property="Height" Value=""/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabItem">
   
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Foreground" Value="#f5f5f5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="15,15,0,0" Background="#6c55e4"
                                BorderThickness="0">
                        <ContentPresenter Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem, AncestorLevel=1}}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="#373737"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="#feb83f" CornerRadius="15,15,0,0">
                                <ContentPresenter Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem, AncestorLevel=1}}"></ContentPresenter>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="TextButton">

        <Setter Property="Foreground" Value="#F3b83f"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>
    
    <Style TargetType="PasswordBox">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="CheckBox">
        
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FlowDirection" Value="RightToLeft"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="LayoutTransform">
            
        </Setter>-->
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
  <Grid>
    <Path x:Name="Equis"
          Opacity="0"
          Stroke="Purple"
          Fill="Purple"
          Stretch="UniformToFill"
          StrokeThickness="20"
          Data="M 15,50 L 40,70 L 80,30"
          Margin="0,0,2,2" />
    <ContentPresenter Margin="4"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"/>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="IsChecked"
             Value="true">
      <Setter TargetName="Equis"
              Property="Opacity"
              Value="1" />
    </Trigger>
    <Trigger Property="IsChecked"
             Value="false">
      <Setter TargetName="Equis"
              Property="Opacity"
              Value="0" />
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
</ResourceDictionary>